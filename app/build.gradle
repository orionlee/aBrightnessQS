apply plugin: 'com.android.application'

// Obtain verion name / string from AndroidManifest
def getMyVersionName() {
    def parsedManifestXml = (new XmlSlurper())
            .parse("${projectDir}/src/main/AndroidManifest.xml")
            .declareNamespace(android: "http://schemas.android.com/apk/res/android")
    return parsedManifestXml."@android:versionName"
}

def getMyVersionCode() {
    def parsedManifestXml = (new XmlSlurper())
            .parse("${projectDir}/src/main/AndroidManifest.xml")
            .declareNamespace(android: "http://schemas.android.com/apk/res/android")
    return parsedManifestXml."@android:versionCode".toInteger()
}

android {
    compileSdkVersion 25
    // Consider not specifying buildToolsVersion, relying on defaults (android gradle plugin 3.0+)
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "net.oldev.aBrightnessQS"
        minSdkVersion 24
        targetSdkVersion 24
        versionCode getMyVersionCode()
        versionName "${getMyVersionName()}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            if (project.hasProperty("releaseStoreFile")) {
                storeFile file(releaseStoreFile)
            } else {
                storeFile file("keystore")
            }
            if (project.hasProperty("releaseStorePassword")) {
                storePassword releaseStorePassword
            } else {
                storePassword "password"
            }
            if (project.hasProperty("releaseKeyAlias")) {
                keyAlias releaseKeyAlias
            } else {
                keyAlias "alias"
            }
            if (project.hasProperty("releaseKeyPassword")) {
                keyPassword releaseKeyPassword
            } else {
                keyPassword "password"
            }
        }
    }

    buildTypes {
        debug {
            // allow debug / release be installed as separate apps, 
            // versionNameSuffix helps to differentiate them visually
            applicationIdSuffix ".debug" 
            versionNameSuffix "-debug"
            resValue "string", "app_name", "@string/app_name_debug"
        }
        release {
            resValue "string", "app_name", "@string/app_name_release"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
    }

}

ext {
    supportLibVersion = "25.4.0"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    // Upgrade support lib version to be compatible with Android Testing Support Library
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:support-annotations:$supportLibVersion"

    androidTestCompile 'com.android.support.test:runner:1.0.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.0'
}
